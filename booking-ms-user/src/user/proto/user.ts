/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.1
 * source: user.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from './google/protobuf/timestamp';
import * as pb_1 from 'google-protobuf';
import * as grpc_1 from '@grpc/grpc-js';

export const protobufPackage = 'user';

export const USER_SERVICE_NAME = 'user';

export namespace user {
  export class GetUsersRequest extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(
      data?:
        | any[]
        | {
            page?: number;
            per_page?: number;
          },
    ) {
      super();
      pb_1.Message.initialize(
        this,
        Array.isArray(data) ? data : [],
        0,
        -1,
        [],
        this.#one_of_decls,
      );
      if (!Array.isArray(data) && typeof data == 'object') {
        if ('page' in data && data.page != undefined) {
          this.page = data.page;
        }
        if ('per_page' in data && data.per_page != undefined) {
          this.per_page = data.per_page;
        }
      }
    }
    get page() {
      return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set page(value: number) {
      pb_1.Message.setField(this, 1, value);
    }
    get per_page() {
      return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
    }
    set per_page(value: number) {
      pb_1.Message.setField(this, 2, value);
    }
    static fromObject(data: {
      page?: number;
      per_page?: number;
    }): GetUsersRequest {
      const message = new GetUsersRequest({});
      if (data.page != null) {
        message.page = data.page;
      }
      if (data.per_page != null) {
        message.per_page = data.per_page;
      }
      return message;
    }
    toObject() {
      const data: {
        page?: number;
        per_page?: number;
      } = {};
      if (this.page != null) {
        data.page = this.page;
      }
      if (this.per_page != null) {
        data.per_page = this.per_page;
      }
      return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
      const writer = w || new pb_1.BinaryWriter();
      if (this.page != 0) writer.writeInt32(1, this.page);
      if (this.per_page != 0) writer.writeInt32(2, this.per_page);
      if (!w) return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetUsersRequest {
      const reader =
          bytes instanceof pb_1.BinaryReader
            ? bytes
            : new pb_1.BinaryReader(bytes),
        message = new GetUsersRequest();
      while (reader.nextField()) {
        if (reader.isEndGroup()) break;
        switch (reader.getFieldNumber()) {
          case 1:
            message.page = reader.readInt32();
            break;
          case 2:
            message.per_page = reader.readInt32();
            break;
          default:
            reader.skipField();
        }
      }
      return message;
    }
    serializeBinary(): Uint8Array {
      return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): GetUsersRequest {
      return GetUsersRequest.deserialize(bytes);
    }
  }
  export class GetUsersResponse extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(
      data?:
        | any[]
        | {
            users?: UserMessage[];
          },
    ) {
      super();
      pb_1.Message.initialize(
        this,
        Array.isArray(data) ? data : [],
        0,
        -1,
        [1],
        this.#one_of_decls,
      );
      if (!Array.isArray(data) && typeof data == 'object') {
        if ('users' in data && data.users != undefined) {
          this.users = data.users;
        }
      }
    }
    get users() {
      return pb_1.Message.getRepeatedWrapperField(
        this,
        UserMessage,
        1,
      ) as UserMessage[];
    }
    set users(value: UserMessage[]) {
      pb_1.Message.setRepeatedWrapperField(this, 1, value);
    }
    static fromObject(data: {
      users?: ReturnType<typeof UserMessage.prototype.toObject>[];
    }): GetUsersResponse {
      const message = new GetUsersResponse({});
      if (data.users != null) {
        message.users = data.users.map((item) => UserMessage.fromObject(item));
      }
      return message;
    }
    toObject() {
      const data: {
        users?: ReturnType<typeof UserMessage.prototype.toObject>[];
      } = {};
      if (this.users != null) {
        data.users = this.users.map((item: UserMessage) => item.toObject());
      }
      return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
      const writer = w || new pb_1.BinaryWriter();
      if (this.users.length)
        writer.writeRepeatedMessage(1, this.users, (item: UserMessage) =>
          item.serialize(writer),
        );
      if (!w) return writer.getResultBuffer();
    }
    static deserialize(
      bytes: Uint8Array | pb_1.BinaryReader,
    ): GetUsersResponse {
      const reader =
          bytes instanceof pb_1.BinaryReader
            ? bytes
            : new pb_1.BinaryReader(bytes),
        message = new GetUsersResponse();
      while (reader.nextField()) {
        if (reader.isEndGroup()) break;
        switch (reader.getFieldNumber()) {
          case 1:
            reader.readMessage(message.users, () =>
              pb_1.Message.addToRepeatedWrapperField(
                message,
                1,
                UserMessage.deserialize(reader),
                UserMessage,
              ),
            );
            break;
          default:
            reader.skipField();
        }
      }
      return message;
    }
    serializeBinary(): Uint8Array {
      return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): GetUsersResponse {
      return GetUsersResponse.deserialize(bytes);
    }
  }
  export class GetUserByIdRequest extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(
      data?:
        | any[]
        | {
            id?: number;
          },
    ) {
      super();
      pb_1.Message.initialize(
        this,
        Array.isArray(data) ? data : [],
        0,
        -1,
        [],
        this.#one_of_decls,
      );
      if (!Array.isArray(data) && typeof data == 'object') {
        if ('id' in data && data.id != undefined) {
          this.id = data.id;
        }
      }
    }
    get id() {
      return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set id(value: number) {
      pb_1.Message.setField(this, 1, value);
    }
    static fromObject(data: { id?: number }): GetUserByIdRequest {
      const message = new GetUserByIdRequest({});
      if (data.id != null) {
        message.id = data.id;
      }
      return message;
    }
    toObject() {
      const data: {
        id?: number;
      } = {};
      if (this.id != null) {
        data.id = this.id;
      }
      return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
      const writer = w || new pb_1.BinaryWriter();
      if (this.id != 0) writer.writeInt32(1, this.id);
      if (!w) return writer.getResultBuffer();
    }
    static deserialize(
      bytes: Uint8Array | pb_1.BinaryReader,
    ): GetUserByIdRequest {
      const reader =
          bytes instanceof pb_1.BinaryReader
            ? bytes
            : new pb_1.BinaryReader(bytes),
        message = new GetUserByIdRequest();
      while (reader.nextField()) {
        if (reader.isEndGroup()) break;
        switch (reader.getFieldNumber()) {
          case 1:
            message.id = reader.readInt32();
            break;
          default:
            reader.skipField();
        }
      }
      return message;
    }
    serializeBinary(): Uint8Array {
      return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): GetUserByIdRequest {
      return GetUserByIdRequest.deserialize(bytes);
    }
  }
  export class GetUserByUsernameRequest extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(
      data?:
        | any[]
        | {
            username?: string;
          },
    ) {
      super();
      pb_1.Message.initialize(
        this,
        Array.isArray(data) ? data : [],
        0,
        -1,
        [],
        this.#one_of_decls,
      );
      if (!Array.isArray(data) && typeof data == 'object') {
        if ('username' in data && data.username != undefined) {
          this.username = data.username;
        }
      }
    }
    get username() {
      return pb_1.Message.getFieldWithDefault(this, 1, '') as string;
    }
    set username(value: string) {
      pb_1.Message.setField(this, 1, value);
    }
    static fromObject(data: { username?: string }): GetUserByUsernameRequest {
      const message = new GetUserByUsernameRequest({});
      if (data.username != null) {
        message.username = data.username;
      }
      return message;
    }
    toObject() {
      const data: {
        username?: string;
      } = {};
      if (this.username != null) {
        data.username = this.username;
      }
      return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
      const writer = w || new pb_1.BinaryWriter();
      if (this.username.length) writer.writeString(1, this.username);
      if (!w) return writer.getResultBuffer();
    }
    static deserialize(
      bytes: Uint8Array | pb_1.BinaryReader,
    ): GetUserByUsernameRequest {
      const reader =
          bytes instanceof pb_1.BinaryReader
            ? bytes
            : new pb_1.BinaryReader(bytes),
        message = new GetUserByUsernameRequest();
      while (reader.nextField()) {
        if (reader.isEndGroup()) break;
        switch (reader.getFieldNumber()) {
          case 1:
            message.username = reader.readString();
            break;
          default:
            reader.skipField();
        }
      }
      return message;
    }
    serializeBinary(): Uint8Array {
      return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): GetUserByUsernameRequest {
      return GetUserByUsernameRequest.deserialize(bytes);
    }
  }
  export class GetUserByEmailRequest extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(
      data?:
        | any[]
        | {
            email?: string;
          },
    ) {
      super();
      pb_1.Message.initialize(
        this,
        Array.isArray(data) ? data : [],
        0,
        -1,
        [],
        this.#one_of_decls,
      );
      if (!Array.isArray(data) && typeof data == 'object') {
        if ('email' in data && data.email != undefined) {
          this.email = data.email;
        }
      }
    }
    get email() {
      return pb_1.Message.getFieldWithDefault(this, 1, '') as string;
    }
    set email(value: string) {
      pb_1.Message.setField(this, 1, value);
    }
    static fromObject(data: { email?: string }): GetUserByEmailRequest {
      const message = new GetUserByEmailRequest({});
      if (data.email != null) {
        message.email = data.email;
      }
      return message;
    }
    toObject() {
      const data: {
        email?: string;
      } = {};
      if (this.email != null) {
        data.email = this.email;
      }
      return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
      const writer = w || new pb_1.BinaryWriter();
      if (this.email.length) writer.writeString(1, this.email);
      if (!w) return writer.getResultBuffer();
    }
    static deserialize(
      bytes: Uint8Array | pb_1.BinaryReader,
    ): GetUserByEmailRequest {
      const reader =
          bytes instanceof pb_1.BinaryReader
            ? bytes
            : new pb_1.BinaryReader(bytes),
        message = new GetUserByEmailRequest();
      while (reader.nextField()) {
        if (reader.isEndGroup()) break;
        switch (reader.getFieldNumber()) {
          case 1:
            message.email = reader.readString();
            break;
          default:
            reader.skipField();
        }
      }
      return message;
    }
    serializeBinary(): Uint8Array {
      return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): GetUserByEmailRequest {
      return GetUserByEmailRequest.deserialize(bytes);
    }
  }
  export class CreateUserRequest extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(
      data?:
        | any[]
        | {
            user?: UserMessage;
          },
    ) {
      super();
      pb_1.Message.initialize(
        this,
        Array.isArray(data) ? data : [],
        0,
        -1,
        [],
        this.#one_of_decls,
      );
      if (!Array.isArray(data) && typeof data == 'object') {
        if ('user' in data && data.user != undefined) {
          this.user = data.user;
        }
      }
    }
    get user() {
      return pb_1.Message.getWrapperField(this, UserMessage, 1) as UserMessage;
    }
    set user(value: UserMessage) {
      pb_1.Message.setWrapperField(this, 1, value);
    }
    get has_user() {
      return pb_1.Message.getField(this, 1) != null;
    }
    static fromObject(data: {
      user?: ReturnType<typeof UserMessage.prototype.toObject>;
    }): CreateUserRequest {
      const message = new CreateUserRequest({});
      if (data.user != null) {
        message.user = UserMessage.fromObject(data.user);
      }
      return message;
    }
    toObject() {
      const data: {
        user?: ReturnType<typeof UserMessage.prototype.toObject>;
      } = {};
      if (this.user != null) {
        data.user = this.user.toObject();
      }
      return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
      const writer = w || new pb_1.BinaryWriter();
      if (this.has_user)
        writer.writeMessage(1, this.user, () => this.user.serialize(writer));
      if (!w) return writer.getResultBuffer();
    }
    static deserialize(
      bytes: Uint8Array | pb_1.BinaryReader,
    ): CreateUserRequest {
      const reader =
          bytes instanceof pb_1.BinaryReader
            ? bytes
            : new pb_1.BinaryReader(bytes),
        message = new CreateUserRequest();
      while (reader.nextField()) {
        if (reader.isEndGroup()) break;
        switch (reader.getFieldNumber()) {
          case 1:
            reader.readMessage(
              message.user,
              () => (message.user = UserMessage.deserialize(reader)),
            );
            break;
          default:
            reader.skipField();
        }
      }
      return message;
    }
    serializeBinary(): Uint8Array {
      return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): CreateUserRequest {
      return CreateUserRequest.deserialize(bytes);
    }
  }
  export class UpdateUserByIdRequest extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(
      data?:
        | any[]
        | {
            id?: number;
            user?: UserMessage;
          },
    ) {
      super();
      pb_1.Message.initialize(
        this,
        Array.isArray(data) ? data : [],
        0,
        -1,
        [],
        this.#one_of_decls,
      );
      if (!Array.isArray(data) && typeof data == 'object') {
        if ('id' in data && data.id != undefined) {
          this.id = data.id;
        }
        if ('user' in data && data.user != undefined) {
          this.user = data.user;
        }
      }
    }
    get id() {
      return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set id(value: number) {
      pb_1.Message.setField(this, 1, value);
    }
    get user() {
      return pb_1.Message.getWrapperField(this, UserMessage, 2) as UserMessage;
    }
    set user(value: UserMessage) {
      pb_1.Message.setWrapperField(this, 2, value);
    }
    get has_user() {
      return pb_1.Message.getField(this, 2) != null;
    }
    static fromObject(data: {
      id?: number;
      user?: ReturnType<typeof UserMessage.prototype.toObject>;
    }): UpdateUserByIdRequest {
      const message = new UpdateUserByIdRequest({});
      if (data.id != null) {
        message.id = data.id;
      }
      if (data.user != null) {
        message.user = UserMessage.fromObject(data.user);
      }
      return message;
    }
    toObject() {
      const data: {
        id?: number;
        user?: ReturnType<typeof UserMessage.prototype.toObject>;
      } = {};
      if (this.id != null) {
        data.id = this.id;
      }
      if (this.user != null) {
        data.user = this.user.toObject();
      }
      return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
      const writer = w || new pb_1.BinaryWriter();
      if (this.id != 0) writer.writeInt32(1, this.id);
      if (this.has_user)
        writer.writeMessage(2, this.user, () => this.user.serialize(writer));
      if (!w) return writer.getResultBuffer();
    }
    static deserialize(
      bytes: Uint8Array | pb_1.BinaryReader,
    ): UpdateUserByIdRequest {
      const reader =
          bytes instanceof pb_1.BinaryReader
            ? bytes
            : new pb_1.BinaryReader(bytes),
        message = new UpdateUserByIdRequest();
      while (reader.nextField()) {
        if (reader.isEndGroup()) break;
        switch (reader.getFieldNumber()) {
          case 1:
            message.id = reader.readInt32();
            break;
          case 2:
            reader.readMessage(
              message.user,
              () => (message.user = UserMessage.deserialize(reader)),
            );
            break;
          default:
            reader.skipField();
        }
      }
      return message;
    }
    serializeBinary(): Uint8Array {
      return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): UpdateUserByIdRequest {
      return UpdateUserByIdRequest.deserialize(bytes);
    }
  }
  export class UpdateUserByUsernameRequest extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(
      data?:
        | any[]
        | {
            username?: string;
            user?: UserMessage;
          },
    ) {
      super();
      pb_1.Message.initialize(
        this,
        Array.isArray(data) ? data : [],
        0,
        -1,
        [],
        this.#one_of_decls,
      );
      if (!Array.isArray(data) && typeof data == 'object') {
        if ('username' in data && data.username != undefined) {
          this.username = data.username;
        }
        if ('user' in data && data.user != undefined) {
          this.user = data.user;
        }
      }
    }
    get username() {
      return pb_1.Message.getFieldWithDefault(this, 1, '') as string;
    }
    set username(value: string) {
      pb_1.Message.setField(this, 1, value);
    }
    get user() {
      return pb_1.Message.getWrapperField(this, UserMessage, 2) as UserMessage;
    }
    set user(value: UserMessage) {
      pb_1.Message.setWrapperField(this, 2, value);
    }
    get has_user() {
      return pb_1.Message.getField(this, 2) != null;
    }
    static fromObject(data: {
      username?: string;
      user?: ReturnType<typeof UserMessage.prototype.toObject>;
    }): UpdateUserByUsernameRequest {
      const message = new UpdateUserByUsernameRequest({});
      if (data.username != null) {
        message.username = data.username;
      }
      if (data.user != null) {
        message.user = UserMessage.fromObject(data.user);
      }
      return message;
    }
    toObject() {
      const data: {
        username?: string;
        user?: ReturnType<typeof UserMessage.prototype.toObject>;
      } = {};
      if (this.username != null) {
        data.username = this.username;
      }
      if (this.user != null) {
        data.user = this.user.toObject();
      }
      return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
      const writer = w || new pb_1.BinaryWriter();
      if (this.username.length) writer.writeString(1, this.username);
      if (this.has_user)
        writer.writeMessage(2, this.user, () => this.user.serialize(writer));
      if (!w) return writer.getResultBuffer();
    }
    static deserialize(
      bytes: Uint8Array | pb_1.BinaryReader,
    ): UpdateUserByUsernameRequest {
      const reader =
          bytes instanceof pb_1.BinaryReader
            ? bytes
            : new pb_1.BinaryReader(bytes),
        message = new UpdateUserByUsernameRequest();
      while (reader.nextField()) {
        if (reader.isEndGroup()) break;
        switch (reader.getFieldNumber()) {
          case 1:
            message.username = reader.readString();
            break;
          case 2:
            reader.readMessage(
              message.user,
              () => (message.user = UserMessage.deserialize(reader)),
            );
            break;
          default:
            reader.skipField();
        }
      }
      return message;
    }
    serializeBinary(): Uint8Array {
      return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): UpdateUserByUsernameRequest {
      return UpdateUserByUsernameRequest.deserialize(bytes);
    }
  }
  export class UserMessage extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(
      data?:
        | any[]
        | {
            id?: number;
            username?: string;
            password?: string;
            email?: string;
            first_name?: string;
            last_name?: string;
            role?: RoleMessage;
            area?: AreaMessage;
            created_at?: dependency_1.google.protobuf.Timestamp;
            created_by?: string;
            updated_at?: dependency_1.google.protobuf.Timestamp;
            updated_by?: string;
          },
    ) {
      super();
      pb_1.Message.initialize(
        this,
        Array.isArray(data) ? data : [],
        0,
        -1,
        [],
        this.#one_of_decls,
      );
      if (!Array.isArray(data) && typeof data == 'object') {
        if ('id' in data && data.id != undefined) {
          this.id = data.id;
        }
        if ('username' in data && data.username != undefined) {
          this.username = data.username;
        }
        if ('password' in data && data.password != undefined) {
          this.password = data.password;
        }
        if ('email' in data && data.email != undefined) {
          this.email = data.email;
        }
        if ('first_name' in data && data.first_name != undefined) {
          this.first_name = data.first_name;
        }
        if ('last_name' in data && data.last_name != undefined) {
          this.last_name = data.last_name;
        }
        if ('role' in data && data.role != undefined) {
          this.role = data.role;
        }
        if ('area' in data && data.area != undefined) {
          this.area = data.area;
        }
        if ('created_at' in data && data.created_at != undefined) {
          this.created_at = data.created_at;
        }
        if ('created_by' in data && data.created_by != undefined) {
          this.created_by = data.created_by;
        }
        if ('updated_at' in data && data.updated_at != undefined) {
          this.updated_at = data.updated_at;
        }
        if ('updated_by' in data && data.updated_by != undefined) {
          this.updated_by = data.updated_by;
        }
      }
    }
    get id() {
      return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set id(value: number) {
      pb_1.Message.setField(this, 1, value);
    }
    get username() {
      return pb_1.Message.getFieldWithDefault(this, 2, '') as string;
    }
    set username(value: string) {
      pb_1.Message.setField(this, 2, value);
    }
    get password() {
      return pb_1.Message.getFieldWithDefault(this, 3, '') as string;
    }
    set password(value: string) {
      pb_1.Message.setField(this, 3, value);
    }
    get email() {
      return pb_1.Message.getFieldWithDefault(this, 4, '') as string;
    }
    set email(value: string) {
      pb_1.Message.setField(this, 4, value);
    }
    get first_name() {
      return pb_1.Message.getFieldWithDefault(this, 5, '') as string;
    }
    set first_name(value: string) {
      pb_1.Message.setField(this, 5, value);
    }
    get last_name() {
      return pb_1.Message.getFieldWithDefault(this, 6, '') as string;
    }
    set last_name(value: string) {
      pb_1.Message.setField(this, 6, value);
    }
    get role() {
      return pb_1.Message.getWrapperField(this, RoleMessage, 7) as RoleMessage;
    }
    set role(value: RoleMessage) {
      pb_1.Message.setWrapperField(this, 7, value);
    }
    get has_role() {
      return pb_1.Message.getField(this, 7) != null;
    }
    get area() {
      return pb_1.Message.getWrapperField(this, AreaMessage, 8) as AreaMessage;
    }
    set area(value: AreaMessage) {
      pb_1.Message.setWrapperField(this, 8, value);
    }
    get has_area() {
      return pb_1.Message.getField(this, 8) != null;
    }
    get created_at() {
      return pb_1.Message.getWrapperField(
        this,
        dependency_1.google.protobuf.Timestamp,
        9,
      ) as dependency_1.google.protobuf.Timestamp;
    }
    set created_at(value: dependency_1.google.protobuf.Timestamp) {
      pb_1.Message.setWrapperField(this, 9, value);
    }
    get has_created_at() {
      return pb_1.Message.getField(this, 9) != null;
    }
    get created_by() {
      return pb_1.Message.getFieldWithDefault(this, 10, '') as string;
    }
    set created_by(value: string) {
      pb_1.Message.setField(this, 10, value);
    }
    get updated_at() {
      return pb_1.Message.getWrapperField(
        this,
        dependency_1.google.protobuf.Timestamp,
        11,
      ) as dependency_1.google.protobuf.Timestamp;
    }
    set updated_at(value: dependency_1.google.protobuf.Timestamp) {
      pb_1.Message.setWrapperField(this, 11, value);
    }
    get has_updated_at() {
      return pb_1.Message.getField(this, 11) != null;
    }
    get updated_by() {
      return pb_1.Message.getFieldWithDefault(this, 12, '') as string;
    }
    set updated_by(value: string) {
      pb_1.Message.setField(this, 12, value);
    }
    static fromObject(data: {
      id?: number;
      username?: string;
      password?: string;
      email?: string;
      first_name?: string;
      last_name?: string;
      role?: ReturnType<typeof RoleMessage.prototype.toObject>;
      area?: ReturnType<typeof AreaMessage.prototype.toObject>;
      created_at?: ReturnType<
        typeof dependency_1.google.protobuf.Timestamp.prototype.toObject
      >;
      created_by?: string;
      updated_at?: ReturnType<
        typeof dependency_1.google.protobuf.Timestamp.prototype.toObject
      >;
      updated_by?: string;
    }): UserMessage {
      const message = new UserMessage({});
      if (data.id != null) {
        message.id = data.id;
      }
      if (data.username != null) {
        message.username = data.username;
      }
      if (data.password != null) {
        message.password = data.password;
      }
      if (data.email != null) {
        message.email = data.email;
      }
      if (data.first_name != null) {
        message.first_name = data.first_name;
      }
      if (data.last_name != null) {
        message.last_name = data.last_name;
      }
      if (data.role != null) {
        message.role = RoleMessage.fromObject(data.role);
      }
      if (data.area != null) {
        message.area = AreaMessage.fromObject(data.area);
      }
      if (data.created_at != null) {
        message.created_at = dependency_1.google.protobuf.Timestamp.fromObject(
          data.created_at,
        );
      }
      if (data.created_by != null) {
        message.created_by = data.created_by;
      }
      if (data.updated_at != null) {
        message.updated_at = dependency_1.google.protobuf.Timestamp.fromObject(
          data.updated_at,
        );
      }
      if (data.updated_by != null) {
        message.updated_by = data.updated_by;
      }
      return message;
    }
    toObject() {
      const data: {
        id?: number;
        username?: string;
        password?: string;
        email?: string;
        first_name?: string;
        last_name?: string;
        role?: ReturnType<typeof RoleMessage.prototype.toObject>;
        area?: ReturnType<typeof AreaMessage.prototype.toObject>;
        created_at?: ReturnType<
          typeof dependency_1.google.protobuf.Timestamp.prototype.toObject
        >;
        created_by?: string;
        updated_at?: ReturnType<
          typeof dependency_1.google.protobuf.Timestamp.prototype.toObject
        >;
        updated_by?: string;
      } = {};
      if (this.id != null) {
        data.id = this.id;
      }
      if (this.username != null) {
        data.username = this.username;
      }
      if (this.password != null) {
        data.password = this.password;
      }
      if (this.email != null) {
        data.email = this.email;
      }
      if (this.first_name != null) {
        data.first_name = this.first_name;
      }
      if (this.last_name != null) {
        data.last_name = this.last_name;
      }
      if (this.role != null) {
        data.role = this.role.toObject();
      }
      if (this.area != null) {
        data.area = this.area.toObject();
      }
      if (this.created_at != null) {
        data.created_at = this.created_at.toObject();
      }
      if (this.created_by != null) {
        data.created_by = this.created_by;
      }
      if (this.updated_at != null) {
        data.updated_at = this.updated_at.toObject();
      }
      if (this.updated_by != null) {
        data.updated_by = this.updated_by;
      }
      return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
      const writer = w || new pb_1.BinaryWriter();
      if (this.id != 0) writer.writeInt32(1, this.id);
      if (this.username.length) writer.writeString(2, this.username);
      if (this.password.length) writer.writeString(3, this.password);
      if (this.email.length) writer.writeString(4, this.email);
      if (this.first_name.length) writer.writeString(5, this.first_name);
      if (this.last_name.length) writer.writeString(6, this.last_name);
      if (this.has_role)
        writer.writeMessage(7, this.role, () => this.role.serialize(writer));
      if (this.has_area)
        writer.writeMessage(8, this.area, () => this.area.serialize(writer));
      if (this.has_created_at)
        writer.writeMessage(9, this.created_at, () =>
          this.created_at.serialize(writer),
        );
      if (this.created_by.length) writer.writeString(10, this.created_by);
      if (this.has_updated_at)
        writer.writeMessage(11, this.updated_at, () =>
          this.updated_at.serialize(writer),
        );
      if (this.updated_by.length) writer.writeString(12, this.updated_by);
      if (!w) return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): UserMessage {
      const reader =
          bytes instanceof pb_1.BinaryReader
            ? bytes
            : new pb_1.BinaryReader(bytes),
        message = new UserMessage();
      while (reader.nextField()) {
        if (reader.isEndGroup()) break;
        switch (reader.getFieldNumber()) {
          case 1:
            message.id = reader.readInt32();
            break;
          case 2:
            message.username = reader.readString();
            break;
          case 3:
            message.password = reader.readString();
            break;
          case 4:
            message.email = reader.readString();
            break;
          case 5:
            message.first_name = reader.readString();
            break;
          case 6:
            message.last_name = reader.readString();
            break;
          case 7:
            reader.readMessage(
              message.role,
              () => (message.role = RoleMessage.deserialize(reader)),
            );
            break;
          case 8:
            reader.readMessage(
              message.area,
              () => (message.area = AreaMessage.deserialize(reader)),
            );
            break;
          case 9:
            reader.readMessage(
              message.created_at,
              () =>
                (message.created_at =
                  dependency_1.google.protobuf.Timestamp.deserialize(reader)),
            );
            break;
          case 10:
            message.created_by = reader.readString();
            break;
          case 11:
            reader.readMessage(
              message.updated_at,
              () =>
                (message.updated_at =
                  dependency_1.google.protobuf.Timestamp.deserialize(reader)),
            );
            break;
          case 12:
            message.updated_by = reader.readString();
            break;
          default:
            reader.skipField();
        }
      }
      return message;
    }
    serializeBinary(): Uint8Array {
      return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): UserMessage {
      return UserMessage.deserialize(bytes);
    }
  }
  export class RoleMessage extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(
      data?:
        | any[]
        | {
            id?: number;
            name?: string;
            description?: string;
            created_at?: dependency_1.google.protobuf.Timestamp;
            created_by?: string;
            updated_at?: dependency_1.google.protobuf.Timestamp;
            updated_by?: string;
          },
    ) {
      super();
      pb_1.Message.initialize(
        this,
        Array.isArray(data) ? data : [],
        0,
        -1,
        [],
        this.#one_of_decls,
      );
      if (!Array.isArray(data) && typeof data == 'object') {
        if ('id' in data && data.id != undefined) {
          this.id = data.id;
        }
        if ('name' in data && data.name != undefined) {
          this.name = data.name;
        }
        if ('description' in data && data.description != undefined) {
          this.description = data.description;
        }
        if ('created_at' in data && data.created_at != undefined) {
          this.created_at = data.created_at;
        }
        if ('created_by' in data && data.created_by != undefined) {
          this.created_by = data.created_by;
        }
        if ('updated_at' in data && data.updated_at != undefined) {
          this.updated_at = data.updated_at;
        }
        if ('updated_by' in data && data.updated_by != undefined) {
          this.updated_by = data.updated_by;
        }
      }
    }
    get id() {
      return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set id(value: number) {
      pb_1.Message.setField(this, 1, value);
    }
    get name() {
      return pb_1.Message.getFieldWithDefault(this, 2, '') as string;
    }
    set name(value: string) {
      pb_1.Message.setField(this, 2, value);
    }
    get description() {
      return pb_1.Message.getFieldWithDefault(this, 3, '') as string;
    }
    set description(value: string) {
      pb_1.Message.setField(this, 3, value);
    }
    get created_at() {
      return pb_1.Message.getWrapperField(
        this,
        dependency_1.google.protobuf.Timestamp,
        4,
      ) as dependency_1.google.protobuf.Timestamp;
    }
    set created_at(value: dependency_1.google.protobuf.Timestamp) {
      pb_1.Message.setWrapperField(this, 4, value);
    }
    get has_created_at() {
      return pb_1.Message.getField(this, 4) != null;
    }
    get created_by() {
      return pb_1.Message.getFieldWithDefault(this, 5, '') as string;
    }
    set created_by(value: string) {
      pb_1.Message.setField(this, 5, value);
    }
    get updated_at() {
      return pb_1.Message.getWrapperField(
        this,
        dependency_1.google.protobuf.Timestamp,
        6,
      ) as dependency_1.google.protobuf.Timestamp;
    }
    set updated_at(value: dependency_1.google.protobuf.Timestamp) {
      pb_1.Message.setWrapperField(this, 6, value);
    }
    get has_updated_at() {
      return pb_1.Message.getField(this, 6) != null;
    }
    get updated_by() {
      return pb_1.Message.getFieldWithDefault(this, 7, '') as string;
    }
    set updated_by(value: string) {
      pb_1.Message.setField(this, 7, value);
    }
    static fromObject(data: {
      id?: number;
      name?: string;
      description?: string;
      created_at?: ReturnType<
        typeof dependency_1.google.protobuf.Timestamp.prototype.toObject
      >;
      created_by?: string;
      updated_at?: ReturnType<
        typeof dependency_1.google.protobuf.Timestamp.prototype.toObject
      >;
      updated_by?: string;
    }): RoleMessage {
      const message = new RoleMessage({});
      if (data.id != null) {
        message.id = data.id;
      }
      if (data.name != null) {
        message.name = data.name;
      }
      if (data.description != null) {
        message.description = data.description;
      }
      if (data.created_at != null) {
        message.created_at = dependency_1.google.protobuf.Timestamp.fromObject(
          data.created_at,
        );
      }
      if (data.created_by != null) {
        message.created_by = data.created_by;
      }
      if (data.updated_at != null) {
        message.updated_at = dependency_1.google.protobuf.Timestamp.fromObject(
          data.updated_at,
        );
      }
      if (data.updated_by != null) {
        message.updated_by = data.updated_by;
      }
      return message;
    }
    toObject() {
      const data: {
        id?: number;
        name?: string;
        description?: string;
        created_at?: ReturnType<
          typeof dependency_1.google.protobuf.Timestamp.prototype.toObject
        >;
        created_by?: string;
        updated_at?: ReturnType<
          typeof dependency_1.google.protobuf.Timestamp.prototype.toObject
        >;
        updated_by?: string;
      } = {};
      if (this.id != null) {
        data.id = this.id;
      }
      if (this.name != null) {
        data.name = this.name;
      }
      if (this.description != null) {
        data.description = this.description;
      }
      if (this.created_at != null) {
        data.created_at = this.created_at.toObject();
      }
      if (this.created_by != null) {
        data.created_by = this.created_by;
      }
      if (this.updated_at != null) {
        data.updated_at = this.updated_at.toObject();
      }
      if (this.updated_by != null) {
        data.updated_by = this.updated_by;
      }
      return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
      const writer = w || new pb_1.BinaryWriter();
      if (this.id != 0) writer.writeInt32(1, this.id);
      if (this.name.length) writer.writeString(2, this.name);
      if (this.description.length) writer.writeString(3, this.description);
      if (this.has_created_at)
        writer.writeMessage(4, this.created_at, () =>
          this.created_at.serialize(writer),
        );
      if (this.created_by.length) writer.writeString(5, this.created_by);
      if (this.has_updated_at)
        writer.writeMessage(6, this.updated_at, () =>
          this.updated_at.serialize(writer),
        );
      if (this.updated_by.length) writer.writeString(7, this.updated_by);
      if (!w) return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): RoleMessage {
      const reader =
          bytes instanceof pb_1.BinaryReader
            ? bytes
            : new pb_1.BinaryReader(bytes),
        message = new RoleMessage();
      while (reader.nextField()) {
        if (reader.isEndGroup()) break;
        switch (reader.getFieldNumber()) {
          case 1:
            message.id = reader.readInt32();
            break;
          case 2:
            message.name = reader.readString();
            break;
          case 3:
            message.description = reader.readString();
            break;
          case 4:
            reader.readMessage(
              message.created_at,
              () =>
                (message.created_at =
                  dependency_1.google.protobuf.Timestamp.deserialize(reader)),
            );
            break;
          case 5:
            message.created_by = reader.readString();
            break;
          case 6:
            reader.readMessage(
              message.updated_at,
              () =>
                (message.updated_at =
                  dependency_1.google.protobuf.Timestamp.deserialize(reader)),
            );
            break;
          case 7:
            message.updated_by = reader.readString();
            break;
          default:
            reader.skipField();
        }
      }
      return message;
    }
    serializeBinary(): Uint8Array {
      return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): RoleMessage {
      return RoleMessage.deserialize(bytes);
    }
  }
  export class AreaMessage extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(
      data?:
        | any[]
        | {
            id?: number;
            name?: string;
            description?: string;
            department?: DepartmentMessage;
            created_at?: dependency_1.google.protobuf.Timestamp;
            created_by?: string;
            updated_at?: dependency_1.google.protobuf.Timestamp;
            updated_by?: string;
          },
    ) {
      super();
      pb_1.Message.initialize(
        this,
        Array.isArray(data) ? data : [],
        0,
        -1,
        [],
        this.#one_of_decls,
      );
      if (!Array.isArray(data) && typeof data == 'object') {
        if ('id' in data && data.id != undefined) {
          this.id = data.id;
        }
        if ('name' in data && data.name != undefined) {
          this.name = data.name;
        }
        if ('description' in data && data.description != undefined) {
          this.description = data.description;
        }
        if ('department' in data && data.department != undefined) {
          this.department = data.department;
        }
        if ('created_at' in data && data.created_at != undefined) {
          this.created_at = data.created_at;
        }
        if ('created_by' in data && data.created_by != undefined) {
          this.created_by = data.created_by;
        }
        if ('updated_at' in data && data.updated_at != undefined) {
          this.updated_at = data.updated_at;
        }
        if ('updated_by' in data && data.updated_by != undefined) {
          this.updated_by = data.updated_by;
        }
      }
    }
    get id() {
      return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set id(value: number) {
      pb_1.Message.setField(this, 1, value);
    }
    get name() {
      return pb_1.Message.getFieldWithDefault(this, 2, '') as string;
    }
    set name(value: string) {
      pb_1.Message.setField(this, 2, value);
    }
    get description() {
      return pb_1.Message.getFieldWithDefault(this, 3, '') as string;
    }
    set description(value: string) {
      pb_1.Message.setField(this, 3, value);
    }
    get department() {
      return pb_1.Message.getWrapperField(
        this,
        DepartmentMessage,
        4,
      ) as DepartmentMessage;
    }
    set department(value: DepartmentMessage) {
      pb_1.Message.setWrapperField(this, 4, value);
    }
    get has_department() {
      return pb_1.Message.getField(this, 4) != null;
    }
    get created_at() {
      return pb_1.Message.getWrapperField(
        this,
        dependency_1.google.protobuf.Timestamp,
        5,
      ) as dependency_1.google.protobuf.Timestamp;
    }
    set created_at(value: dependency_1.google.protobuf.Timestamp) {
      pb_1.Message.setWrapperField(this, 5, value);
    }
    get has_created_at() {
      return pb_1.Message.getField(this, 5) != null;
    }
    get created_by() {
      return pb_1.Message.getFieldWithDefault(this, 6, '') as string;
    }
    set created_by(value: string) {
      pb_1.Message.setField(this, 6, value);
    }
    get updated_at() {
      return pb_1.Message.getWrapperField(
        this,
        dependency_1.google.protobuf.Timestamp,
        7,
      ) as dependency_1.google.protobuf.Timestamp;
    }
    set updated_at(value: dependency_1.google.protobuf.Timestamp) {
      pb_1.Message.setWrapperField(this, 7, value);
    }
    get has_updated_at() {
      return pb_1.Message.getField(this, 7) != null;
    }
    get updated_by() {
      return pb_1.Message.getFieldWithDefault(this, 8, '') as string;
    }
    set updated_by(value: string) {
      pb_1.Message.setField(this, 8, value);
    }
    static fromObject(data: {
      id?: number;
      name?: string;
      description?: string;
      department?: ReturnType<typeof DepartmentMessage.prototype.toObject>;
      created_at?: ReturnType<
        typeof dependency_1.google.protobuf.Timestamp.prototype.toObject
      >;
      created_by?: string;
      updated_at?: ReturnType<
        typeof dependency_1.google.protobuf.Timestamp.prototype.toObject
      >;
      updated_by?: string;
    }): AreaMessage {
      const message = new AreaMessage({});
      if (data.id != null) {
        message.id = data.id;
      }
      if (data.name != null) {
        message.name = data.name;
      }
      if (data.description != null) {
        message.description = data.description;
      }
      if (data.department != null) {
        message.department = DepartmentMessage.fromObject(data.department);
      }
      if (data.created_at != null) {
        message.created_at = dependency_1.google.protobuf.Timestamp.fromObject(
          data.created_at,
        );
      }
      if (data.created_by != null) {
        message.created_by = data.created_by;
      }
      if (data.updated_at != null) {
        message.updated_at = dependency_1.google.protobuf.Timestamp.fromObject(
          data.updated_at,
        );
      }
      if (data.updated_by != null) {
        message.updated_by = data.updated_by;
      }
      return message;
    }
    toObject() {
      const data: {
        id?: number;
        name?: string;
        description?: string;
        department?: ReturnType<typeof DepartmentMessage.prototype.toObject>;
        created_at?: ReturnType<
          typeof dependency_1.google.protobuf.Timestamp.prototype.toObject
        >;
        created_by?: string;
        updated_at?: ReturnType<
          typeof dependency_1.google.protobuf.Timestamp.prototype.toObject
        >;
        updated_by?: string;
      } = {};
      if (this.id != null) {
        data.id = this.id;
      }
      if (this.name != null) {
        data.name = this.name;
      }
      if (this.description != null) {
        data.description = this.description;
      }
      if (this.department != null) {
        data.department = this.department.toObject();
      }
      if (this.created_at != null) {
        data.created_at = this.created_at.toObject();
      }
      if (this.created_by != null) {
        data.created_by = this.created_by;
      }
      if (this.updated_at != null) {
        data.updated_at = this.updated_at.toObject();
      }
      if (this.updated_by != null) {
        data.updated_by = this.updated_by;
      }
      return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
      const writer = w || new pb_1.BinaryWriter();
      if (this.id != 0) writer.writeInt32(1, this.id);
      if (this.name.length) writer.writeString(2, this.name);
      if (this.description.length) writer.writeString(3, this.description);
      if (this.has_department)
        writer.writeMessage(4, this.department, () =>
          this.department.serialize(writer),
        );
      if (this.has_created_at)
        writer.writeMessage(5, this.created_at, () =>
          this.created_at.serialize(writer),
        );
      if (this.created_by.length) writer.writeString(6, this.created_by);
      if (this.has_updated_at)
        writer.writeMessage(7, this.updated_at, () =>
          this.updated_at.serialize(writer),
        );
      if (this.updated_by.length) writer.writeString(8, this.updated_by);
      if (!w) return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AreaMessage {
      const reader =
          bytes instanceof pb_1.BinaryReader
            ? bytes
            : new pb_1.BinaryReader(bytes),
        message = new AreaMessage();
      while (reader.nextField()) {
        if (reader.isEndGroup()) break;
        switch (reader.getFieldNumber()) {
          case 1:
            message.id = reader.readInt32();
            break;
          case 2:
            message.name = reader.readString();
            break;
          case 3:
            message.description = reader.readString();
            break;
          case 4:
            reader.readMessage(
              message.department,
              () =>
                (message.department = DepartmentMessage.deserialize(reader)),
            );
            break;
          case 5:
            reader.readMessage(
              message.created_at,
              () =>
                (message.created_at =
                  dependency_1.google.protobuf.Timestamp.deserialize(reader)),
            );
            break;
          case 6:
            message.created_by = reader.readString();
            break;
          case 7:
            reader.readMessage(
              message.updated_at,
              () =>
                (message.updated_at =
                  dependency_1.google.protobuf.Timestamp.deserialize(reader)),
            );
            break;
          case 8:
            message.updated_by = reader.readString();
            break;
          default:
            reader.skipField();
        }
      }
      return message;
    }
    serializeBinary(): Uint8Array {
      return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): AreaMessage {
      return AreaMessage.deserialize(bytes);
    }
  }
  export class DepartmentMessage extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(
      data?:
        | any[]
        | {
            id?: number;
            name?: string;
            description?: string;
            created_at?: dependency_1.google.protobuf.Timestamp;
            created_by?: string;
            updated_at?: dependency_1.google.protobuf.Timestamp;
            updated_by?: string;
          },
    ) {
      super();
      pb_1.Message.initialize(
        this,
        Array.isArray(data) ? data : [],
        0,
        -1,
        [],
        this.#one_of_decls,
      );
      if (!Array.isArray(data) && typeof data == 'object') {
        if ('id' in data && data.id != undefined) {
          this.id = data.id;
        }
        if ('name' in data && data.name != undefined) {
          this.name = data.name;
        }
        if ('description' in data && data.description != undefined) {
          this.description = data.description;
        }
        if ('created_at' in data && data.created_at != undefined) {
          this.created_at = data.created_at;
        }
        if ('created_by' in data && data.created_by != undefined) {
          this.created_by = data.created_by;
        }
        if ('updated_at' in data && data.updated_at != undefined) {
          this.updated_at = data.updated_at;
        }
        if ('updated_by' in data && data.updated_by != undefined) {
          this.updated_by = data.updated_by;
        }
      }
    }
    get id() {
      return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set id(value: number) {
      pb_1.Message.setField(this, 1, value);
    }
    get name() {
      return pb_1.Message.getFieldWithDefault(this, 2, '') as string;
    }
    set name(value: string) {
      pb_1.Message.setField(this, 2, value);
    }
    get description() {
      return pb_1.Message.getFieldWithDefault(this, 3, '') as string;
    }
    set description(value: string) {
      pb_1.Message.setField(this, 3, value);
    }
    get created_at() {
      return pb_1.Message.getWrapperField(
        this,
        dependency_1.google.protobuf.Timestamp,
        4,
      ) as dependency_1.google.protobuf.Timestamp;
    }
    set created_at(value: dependency_1.google.protobuf.Timestamp) {
      pb_1.Message.setWrapperField(this, 4, value);
    }
    get has_created_at() {
      return pb_1.Message.getField(this, 4) != null;
    }
    get created_by() {
      return pb_1.Message.getFieldWithDefault(this, 5, '') as string;
    }
    set created_by(value: string) {
      pb_1.Message.setField(this, 5, value);
    }
    get updated_at() {
      return pb_1.Message.getWrapperField(
        this,
        dependency_1.google.protobuf.Timestamp,
        6,
      ) as dependency_1.google.protobuf.Timestamp;
    }
    set updated_at(value: dependency_1.google.protobuf.Timestamp) {
      pb_1.Message.setWrapperField(this, 6, value);
    }
    get has_updated_at() {
      return pb_1.Message.getField(this, 6) != null;
    }
    get updated_by() {
      return pb_1.Message.getFieldWithDefault(this, 7, '') as string;
    }
    set updated_by(value: string) {
      pb_1.Message.setField(this, 7, value);
    }
    static fromObject(data: {
      id?: number;
      name?: string;
      description?: string;
      created_at?: ReturnType<
        typeof dependency_1.google.protobuf.Timestamp.prototype.toObject
      >;
      created_by?: string;
      updated_at?: ReturnType<
        typeof dependency_1.google.protobuf.Timestamp.prototype.toObject
      >;
      updated_by?: string;
    }): DepartmentMessage {
      const message = new DepartmentMessage({});
      if (data.id != null) {
        message.id = data.id;
      }
      if (data.name != null) {
        message.name = data.name;
      }
      if (data.description != null) {
        message.description = data.description;
      }
      if (data.created_at != null) {
        message.created_at = dependency_1.google.protobuf.Timestamp.fromObject(
          data.created_at,
        );
      }
      if (data.created_by != null) {
        message.created_by = data.created_by;
      }
      if (data.updated_at != null) {
        message.updated_at = dependency_1.google.protobuf.Timestamp.fromObject(
          data.updated_at,
        );
      }
      if (data.updated_by != null) {
        message.updated_by = data.updated_by;
      }
      return message;
    }
    toObject() {
      const data: {
        id?: number;
        name?: string;
        description?: string;
        created_at?: ReturnType<
          typeof dependency_1.google.protobuf.Timestamp.prototype.toObject
        >;
        created_by?: string;
        updated_at?: ReturnType<
          typeof dependency_1.google.protobuf.Timestamp.prototype.toObject
        >;
        updated_by?: string;
      } = {};
      if (this.id != null) {
        data.id = this.id;
      }
      if (this.name != null) {
        data.name = this.name;
      }
      if (this.description != null) {
        data.description = this.description;
      }
      if (this.created_at != null) {
        data.created_at = this.created_at.toObject();
      }
      if (this.created_by != null) {
        data.created_by = this.created_by;
      }
      if (this.updated_at != null) {
        data.updated_at = this.updated_at.toObject();
      }
      if (this.updated_by != null) {
        data.updated_by = this.updated_by;
      }
      return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
      const writer = w || new pb_1.BinaryWriter();
      if (this.id != 0) writer.writeInt32(1, this.id);
      if (this.name.length) writer.writeString(2, this.name);
      if (this.description.length) writer.writeString(3, this.description);
      if (this.has_created_at)
        writer.writeMessage(4, this.created_at, () =>
          this.created_at.serialize(writer),
        );
      if (this.created_by.length) writer.writeString(5, this.created_by);
      if (this.has_updated_at)
        writer.writeMessage(6, this.updated_at, () =>
          this.updated_at.serialize(writer),
        );
      if (this.updated_by.length) writer.writeString(7, this.updated_by);
      if (!w) return writer.getResultBuffer();
    }
    static deserialize(
      bytes: Uint8Array | pb_1.BinaryReader,
    ): DepartmentMessage {
      const reader =
          bytes instanceof pb_1.BinaryReader
            ? bytes
            : new pb_1.BinaryReader(bytes),
        message = new DepartmentMessage();
      while (reader.nextField()) {
        if (reader.isEndGroup()) break;
        switch (reader.getFieldNumber()) {
          case 1:
            message.id = reader.readInt32();
            break;
          case 2:
            message.name = reader.readString();
            break;
          case 3:
            message.description = reader.readString();
            break;
          case 4:
            reader.readMessage(
              message.created_at,
              () =>
                (message.created_at =
                  dependency_1.google.protobuf.Timestamp.deserialize(reader)),
            );
            break;
          case 5:
            message.created_by = reader.readString();
            break;
          case 6:
            reader.readMessage(
              message.updated_at,
              () =>
                (message.updated_at =
                  dependency_1.google.protobuf.Timestamp.deserialize(reader)),
            );
            break;
          case 7:
            message.updated_by = reader.readString();
            break;
          default:
            reader.skipField();
        }
      }
      return message;
    }
    serializeBinary(): Uint8Array {
      return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): DepartmentMessage {
      return DepartmentMessage.deserialize(bytes);
    }
  }
  interface GrpcUnaryServiceInterface<P, R> {
    (
      message: P,
      metadata: grpc_1.Metadata,
      options: grpc_1.CallOptions,
      callback: grpc_1.requestCallback<R>,
    ): grpc_1.ClientUnaryCall;
    (
      message: P,
      metadata: grpc_1.Metadata,
      callback: grpc_1.requestCallback<R>,
    ): grpc_1.ClientUnaryCall;
    (
      message: P,
      options: grpc_1.CallOptions,
      callback: grpc_1.requestCallback<R>,
    ): grpc_1.ClientUnaryCall;
    (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
  }
  interface GrpcStreamServiceInterface<P, R> {
    (
      message: P,
      metadata: grpc_1.Metadata,
      options?: grpc_1.CallOptions,
    ): grpc_1.ClientReadableStream<R>;
    (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
  }
  interface GrpWritableServiceInterface<P, R> {
    (
      metadata: grpc_1.Metadata,
      options: grpc_1.CallOptions,
      callback: grpc_1.requestCallback<R>,
    ): grpc_1.ClientWritableStream<P>;
    (
      metadata: grpc_1.Metadata,
      callback: grpc_1.requestCallback<R>,
    ): grpc_1.ClientWritableStream<P>;
    (
      options: grpc_1.CallOptions,
      callback: grpc_1.requestCallback<R>,
    ): grpc_1.ClientWritableStream<P>;
    (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
  }
  interface GrpcChunkServiceInterface<P, R> {
    (
      metadata: grpc_1.Metadata,
      options?: grpc_1.CallOptions,
    ): grpc_1.ClientDuplexStream<P, R>;
    (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
  }
  interface GrpcPromiseServiceInterface<P, R> {
    (
      message: P,
      metadata: grpc_1.Metadata,
      options?: grpc_1.CallOptions,
    ): Promise<R>;
    (message: P, options?: grpc_1.CallOptions): Promise<R>;
  }
  export abstract class UnimplementedUserServiceService {
    static definition = {
      GetUsers: {
        path: '/user.UserService/GetUsers',
        requestStream: false,
        responseStream: false,
        requestSerialize: (message: GetUsersRequest) =>
          Buffer.from(message.serialize()),
        requestDeserialize: (bytes: Buffer) =>
          GetUsersRequest.deserialize(new Uint8Array(bytes)),
        responseSerialize: (message: GetUsersResponse) =>
          Buffer.from(message.serialize()),
        responseDeserialize: (bytes: Buffer) =>
          GetUsersResponse.deserialize(new Uint8Array(bytes)),
      },
      GetUserById: {
        path: '/user.UserService/GetUserById',
        requestStream: false,
        responseStream: false,
        requestSerialize: (message: GetUserByIdRequest) =>
          Buffer.from(message.serialize()),
        requestDeserialize: (bytes: Buffer) =>
          GetUserByIdRequest.deserialize(new Uint8Array(bytes)),
        responseSerialize: (message: UserMessage) =>
          Buffer.from(message.serialize()),
        responseDeserialize: (bytes: Buffer) =>
          UserMessage.deserialize(new Uint8Array(bytes)),
      },
      GetUserByUsername: {
        path: '/user.UserService/GetUserByUsername',
        requestStream: false,
        responseStream: false,
        requestSerialize: (message: GetUserByUsernameRequest) =>
          Buffer.from(message.serialize()),
        requestDeserialize: (bytes: Buffer) =>
          GetUserByUsernameRequest.deserialize(new Uint8Array(bytes)),
        responseSerialize: (message: UserMessage) =>
          Buffer.from(message.serialize()),
        responseDeserialize: (bytes: Buffer) =>
          UserMessage.deserialize(new Uint8Array(bytes)),
      },
      GetUserByEmail: {
        path: '/user.UserService/GetUserByEmail',
        requestStream: false,
        responseStream: false,
        requestSerialize: (message: GetUserByEmailRequest) =>
          Buffer.from(message.serialize()),
        requestDeserialize: (bytes: Buffer) =>
          GetUserByEmailRequest.deserialize(new Uint8Array(bytes)),
        responseSerialize: (message: UserMessage) =>
          Buffer.from(message.serialize()),
        responseDeserialize: (bytes: Buffer) =>
          UserMessage.deserialize(new Uint8Array(bytes)),
      },
      CreateUser: {
        path: '/user.UserService/CreateUser',
        requestStream: false,
        responseStream: false,
        requestSerialize: (message: CreateUserRequest) =>
          Buffer.from(message.serialize()),
        requestDeserialize: (bytes: Buffer) =>
          CreateUserRequest.deserialize(new Uint8Array(bytes)),
        responseSerialize: (message: UserMessage) =>
          Buffer.from(message.serialize()),
        responseDeserialize: (bytes: Buffer) =>
          UserMessage.deserialize(new Uint8Array(bytes)),
      },
      UpdateUserById: {
        path: '/user.UserService/UpdateUserById',
        requestStream: false,
        responseStream: false,
        requestSerialize: (message: UpdateUserByIdRequest) =>
          Buffer.from(message.serialize()),
        requestDeserialize: (bytes: Buffer) =>
          UpdateUserByIdRequest.deserialize(new Uint8Array(bytes)),
        responseSerialize: (message: UserMessage) =>
          Buffer.from(message.serialize()),
        responseDeserialize: (bytes: Buffer) =>
          UserMessage.deserialize(new Uint8Array(bytes)),
      },
      UpdateUserByUsername: {
        path: '/user.UserService/UpdateUserByUsername',
        requestStream: false,
        responseStream: false,
        requestSerialize: (message: UpdateUserByUsernameRequest) =>
          Buffer.from(message.serialize()),
        requestDeserialize: (bytes: Buffer) =>
          UpdateUserByUsernameRequest.deserialize(new Uint8Array(bytes)),
        responseSerialize: (message: UserMessage) =>
          Buffer.from(message.serialize()),
        responseDeserialize: (bytes: Buffer) =>
          UserMessage.deserialize(new Uint8Array(bytes)),
      },
    };
    [method: string]: grpc_1.UntypedHandleCall;
    abstract GetUsers(
      call: grpc_1.ServerUnaryCall<GetUsersRequest, GetUsersResponse>,
      callback: grpc_1.sendUnaryData<GetUsersResponse>,
    ): void;
    abstract GetUserById(
      call: grpc_1.ServerUnaryCall<GetUserByIdRequest, UserMessage>,
      callback: grpc_1.sendUnaryData<UserMessage>,
    ): void;
    abstract GetUserByUsername(
      call: grpc_1.ServerUnaryCall<GetUserByUsernameRequest, UserMessage>,
      callback: grpc_1.sendUnaryData<UserMessage>,
    ): void;
    abstract GetUserByEmail(
      call: grpc_1.ServerUnaryCall<GetUserByEmailRequest, UserMessage>,
      callback: grpc_1.sendUnaryData<UserMessage>,
    ): void;
    abstract CreateUser(
      call: grpc_1.ServerUnaryCall<CreateUserRequest, UserMessage>,
      callback: grpc_1.sendUnaryData<UserMessage>,
    ): void;
    abstract UpdateUserById(
      call: grpc_1.ServerUnaryCall<UpdateUserByIdRequest, UserMessage>,
      callback: grpc_1.sendUnaryData<UserMessage>,
    ): void;
    abstract UpdateUserByUsername(
      call: grpc_1.ServerUnaryCall<UpdateUserByUsernameRequest, UserMessage>,
      callback: grpc_1.sendUnaryData<UserMessage>,
    ): void;
  }
  export class UserServiceClient extends grpc_1.makeGenericClientConstructor(
    UnimplementedUserServiceService.definition,
    'UserService',
    {},
  ) {
    constructor(
      address: string,
      credentials: grpc_1.ChannelCredentials,
      options?: Partial<grpc_1.ChannelOptions>,
    ) {
      super(address, credentials, options);
    }
    GetUsers: GrpcUnaryServiceInterface<GetUsersRequest, GetUsersResponse> = (
      message: GetUsersRequest,
      metadata:
        | grpc_1.Metadata
        | grpc_1.CallOptions
        | grpc_1.requestCallback<GetUsersResponse>,
      options?: grpc_1.CallOptions | grpc_1.requestCallback<GetUsersResponse>,
      callback?: grpc_1.requestCallback<GetUsersResponse>,
    ): grpc_1.ClientUnaryCall => {
      return super.GetUsers(message, metadata, options, callback);
    };
    GetUserById: GrpcUnaryServiceInterface<GetUserByIdRequest, UserMessage> = (
      message: GetUserByIdRequest,
      metadata:
        | grpc_1.Metadata
        | grpc_1.CallOptions
        | grpc_1.requestCallback<UserMessage>,
      options?: grpc_1.CallOptions | grpc_1.requestCallback<UserMessage>,
      callback?: grpc_1.requestCallback<UserMessage>,
    ): grpc_1.ClientUnaryCall => {
      return super.GetUserById(message, metadata, options, callback);
    };
    GetUserByUsername: GrpcUnaryServiceInterface<
      GetUserByUsernameRequest,
      UserMessage
    > = (
      message: GetUserByUsernameRequest,
      metadata:
        | grpc_1.Metadata
        | grpc_1.CallOptions
        | grpc_1.requestCallback<UserMessage>,
      options?: grpc_1.CallOptions | grpc_1.requestCallback<UserMessage>,
      callback?: grpc_1.requestCallback<UserMessage>,
    ): grpc_1.ClientUnaryCall => {
      return super.GetUserByUsername(message, metadata, options, callback);
    };
    GetUserByEmail: GrpcUnaryServiceInterface<
      GetUserByEmailRequest,
      UserMessage
    > = (
      message: GetUserByEmailRequest,
      metadata:
        | grpc_1.Metadata
        | grpc_1.CallOptions
        | grpc_1.requestCallback<UserMessage>,
      options?: grpc_1.CallOptions | grpc_1.requestCallback<UserMessage>,
      callback?: grpc_1.requestCallback<UserMessage>,
    ): grpc_1.ClientUnaryCall => {
      return super.GetUserByEmail(message, metadata, options, callback);
    };
    CreateUser: GrpcUnaryServiceInterface<CreateUserRequest, UserMessage> = (
      message: CreateUserRequest,
      metadata:
        | grpc_1.Metadata
        | grpc_1.CallOptions
        | grpc_1.requestCallback<UserMessage>,
      options?: grpc_1.CallOptions | grpc_1.requestCallback<UserMessage>,
      callback?: grpc_1.requestCallback<UserMessage>,
    ): grpc_1.ClientUnaryCall => {
      return super.CreateUser(message, metadata, options, callback);
    };
    UpdateUserById: GrpcUnaryServiceInterface<
      UpdateUserByIdRequest,
      UserMessage
    > = (
      message: UpdateUserByIdRequest,
      metadata:
        | grpc_1.Metadata
        | grpc_1.CallOptions
        | grpc_1.requestCallback<UserMessage>,
      options?: grpc_1.CallOptions | grpc_1.requestCallback<UserMessage>,
      callback?: grpc_1.requestCallback<UserMessage>,
    ): grpc_1.ClientUnaryCall => {
      return super.UpdateUserById(message, metadata, options, callback);
    };
    UpdateUserByUsername: GrpcUnaryServiceInterface<
      UpdateUserByUsernameRequest,
      UserMessage
    > = (
      message: UpdateUserByUsernameRequest,
      metadata:
        | grpc_1.Metadata
        | grpc_1.CallOptions
        | grpc_1.requestCallback<UserMessage>,
      options?: grpc_1.CallOptions | grpc_1.requestCallback<UserMessage>,
      callback?: grpc_1.requestCallback<UserMessage>,
    ): grpc_1.ClientUnaryCall => {
      return super.UpdateUserByUsername(message, metadata, options, callback);
    };
  }
}
